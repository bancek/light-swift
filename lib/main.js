// Generated by CoffeeScript 1.6.3
(function() {
  var Backend, LightSwift, Storage, argv, backendProviders, clean, create, fs, options, opts, storageProviders, swift;

  fs = require('fs');

  clean = function(x) {
    return x.replace(/\.\w+$/, '');
  };

  backendProviders = fs.readdirSync(__dirname + '/backend').map(clean);

  storageProviders = fs.readdirSync(__dirname + '/storage').map(clean);

  opts = require('optimist').usage("Usage: $0 [options]\n\nBackend providers: " + (backendProviders.join(', ')) + "\nStorage providers: " + (storageProviders.join(', '))).describe('h', 'Help').alias('h', 'help').describe('v', 'Verbose').alias('v', 'verbose').boolean('v').describe('p', 'Port to listen on').alias('p', 'port')["default"]('p', 8080).describe('a', 'Swift account (tenant)').alias('a', 'account')["default"]('a', 'test').string('a').describe('u', 'Swift username').alias('u', 'username')["default"]('u', 'tester').string('u').describe('k', 'Swift user key').alias('k', 'key')["default"]('k', 'testing').string('k').describe('c', 'Swift default container').alias('c', 'container')["default"]('c', '').string('c').describe('b', 'Backend').alias('b', 'backend')["default"]('b', 'memory').string('b').describe('t', 'Backend options').alias('t', 'backendopts')["default"]('t', '[]').string('t').describe('s', 'Storage').alias('s', 'storage')["default"]('s', 'memory').string('s').describe('o', 'Storage options').alias('o', 'storageopts')["default"]('o', '[]').string('o');

  argv = opts.argv;

  if (argv.help) {
    opts.showHelp();
    process.exit();
  }

  LightSwift = require('./light-swift');

  Backend = require('./backend/' + argv.backend);

  Storage = require('./storage/' + argv.storage);

  create = function(cls, args) {
    var factory;
    args.unshift(null);
    factory = cls.bind.apply(cls, args);
    return new factory();
  };

  options = {
    port: argv.port,
    verbose: argv.verbose,
    storage: create(Storage, JSON.parse(argv.storageopts)),
    backend: create(Backend, JSON.parse(argv.backendopts))
  };

  swift = new LightSwift(options);

  swift.connect().then(function() {
    return swift.addAccount(argv.account);
  }).then(function() {
    return swift.addUser(argv.account, argv.username, argv.key);
  }).then(function() {
    if (argv.container) {
      return swift.addContainer(argv.account, argv.container);
    }
  }).then(function() {
    return swift.server();
  }).then(function() {
    return console.log("Light Swift server started on " + ("0.0.0.0:" + options.port + " using " + argv.backend + " backend ") + ("and " + argv.storage + " storage"));
  }).fail(function(err) {
    console.error(err);
    return console.error(err.stack);
  });

}).call(this);
