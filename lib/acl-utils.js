// Generated by CoffeeScript 1.6.3
(function() {
  var endsWith, url;

  url = require('url');

  endsWith = function(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
  };

  exports.cleanAcl = function(name, value) {
    var values;
    name = name.toLowerCase();
    values = [];
    value.split(',').forEach(function(rawValue) {
      var first, negate, second;
      rawValue = rawValue.trim();
      if (rawValue) {
        if (!/:/.test(rawValue)) {
          return values.push(rawValue);
        } else {
          second = rawValue.split(':');
          first = second.shift().trim();
          second = second.join(':').trim();
          if (!first || first[0] !== '.') {
            return values.push(rawValue);
          } else if (first === '.r' || first === '.ref' || first === '.referer' || first === '.referrer') {
            if (/write/.test(name)) {
              throw new Error("Referrers not allowed in write ACL: " + rawValue);
            }
            negate = false;
            if (second && second[0] === '-') {
              negate = true;
              second = second.slice(1).trim();
            }
            if (second && second !== '*' && second[0] === '*') {
              second = second.slice(1).trim();
            }
            if (!second || second === '.') {
              throw new Error("No host/domain value after referrer " + ("designation in ACL: " + rawValue));
            }
            negate = negate ? '-' : '';
            return values.push(".r:" + negate + second);
          } else {
            throw new Error("Unknown designator " + first + " in ACL: " + rawValue);
          }
        }
      }
    });
    return values.join(',');
  };

  exports.parseAcl = function(aclString) {
    var groups, referrers;
    referrers = [];
    groups = [];
    if (aclString) {
      aclString.split(',').forEach(function(value) {
        if (/^\.r:/.test(value)) {
          return referrers.push(value.substring(3));
        } else {
          return groups.push(value);
        }
      });
    }
    return [referrers, groups];
  };

  exports.referrerAllowed = function(referrer, referrerAcl) {
    var allow, rhost;
    allow = false;
    if (referrerAcl != null ? referrerAcl.length : void 0) {
      rhost = url.parse(referrer || '').hostname || 'unknown';
      referrerAcl.forEach(function(mhost) {
        if (mhost[0] === '-') {
          mhost = mhost.slice(1);
          if (mhost === rhost || (mhost[0] === '.' && endsWith(rhost, mhost))) {
            return allow = false;
          }
        } else if (mhost === '*' || mhost === rhost || (mhost[0] === '.' && endsWith(rhost, mhost))) {
          return allow = true;
        }
      });
    }
    return allow;
  };

}).call(this);
